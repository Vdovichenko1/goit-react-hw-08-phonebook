{"version":3,"file":"static/js/741.6a231b80.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactsList.styled.js","components/ContactList/ContactList.jsx","redux/auth/pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n","import styled from '@emotion/styled';\n\nexport const FormGeneral = styled.form`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: 320px;\n`;\n\nexport const LabelForm = styled.label`\n  margin-bottom: 10px;\n  font-weight: bold;\n  color: blue;\n  font-size: 20px;\n`;\n\nexport const InputForm = styled.input`\n  margin-bottom: 20px;\n  height: 25px;\n  outline: none;\n  border-radius: 10px;\n  border: 1px solid red;\n  padding-left: 10px;\n  font-size: 20px;\n\n  &:focus {\n    border: 1px solid green;\n  }\n`;\nexport const BtnAddContact = styled.button`\n  width: 150px;\n  height: 30px;\n  margin: 0 auto;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: bold;\n  border: 1px solid white;\n  border-radius: 5px;\n  background-color: #39a1f4;\n  color: white;\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);\n  transform: transition 250ms linear;\n  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n  &:hover {\n    background-color: #8f4bab;\n    transform: scale(1.2);\n  }\n`;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport {\n  FormGeneral,\n  LabelForm,\n  InputForm,\n  BtnAddContact,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contactsApi';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { toast } from 'react-toastify';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts)\n  const dispatch = useDispatch();\n  \n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n  const handleChangeNumber = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = contacts.find(\n        e => e.name.toLowerCase() === name.toLowerCase()\n      );\n    contact\n      ? toast.error(`${contact.name} is already in contacts`)\n        : dispatch(addContact({ name, number }))\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormGeneral onSubmit={handleSubmit}>\n      <LabelForm>Name</LabelForm>\n      <InputForm\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        id={nanoid()}\n        value={name}\n        onChange={handleChangeName}\n      />\n      <LabelForm>Number</LabelForm>\n      <InputForm\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        id={nanoid()}\n        value={number}\n        onChange={handleChangeNumber}\n      />\n      <BtnAddContact type=\"submit\">Add contact</BtnAddContact>\n    </FormGeneral>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const FilterForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: 320px;\n`;\nexport const LabelFilter = styled.label`\n  margin-bottom: 10px;\n  font-size: 18px;\n  color: blue;\n  font-weight: 400;\n`;\n\nexport const InputFilter = styled.input`\n  outline: none;\n  border-radius: 0;\n  color: #212529;\n  background-color: #fff;\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n  height: 20px;\n  box-shadow: 0 0 0 0.2rem rgba(158, 158, 158, 0.25);\n`;\n","import { nanoid } from 'nanoid';\nimport { FilterForm, LabelFilter, InputFilter } from \"./Filter.styled\";\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contactsSlice';\n\nexport default function Filter() {\n    const contactIdFilter = nanoid();\n    const dispatch = useDispatch()\n    const filter = useSelector(selectFilter);\n\n    const changeFilter = e => {\n    dispatch(filterContacts(e.currentTarget.value));\n  };\n    return (\n        <FilterForm>\n            <LabelFilter htmlFor={contactIdFilter}>Find contacts by name</LabelFilter>\n            <InputFilter type=\"text\" value={filter} id={contactIdFilter} onChange={changeFilter} />\n        </FilterForm>\n    )\n}","import styled from '@emotion/styled';\n\nexport const BtnDelete = styled.button`\n  width: 100px;\n  height: 30px;\n  margin-left: 10px;\n  border-radius: 5px;\n  background: #4676d7;\n  cursor: pointer;\n  border: none;\n  font-size: 14px;\n  font-weight: bold;\n  color: white;\n`;\n\nexport const Item = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  text-align: center;\n  align-items: center;\n`;\n\nexport const ListFilter = styled.li`\n  font-size: 16px;\n  font-weight: bold;\n  list-style: none;\n  margin-bottom: 10px;\n`;\n","import { deleteContact} from 'redux/contactsApi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter} from 'redux/contacts/contactsSelectors';\nimport { Item, BtnDelete, ListFilter } from \"./ContactsList.styled\";\n\nexport default function ContactList() {\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    \n    const getVisibleContacts = () => {\n    return contacts.filter(todo =>\n      todo.name.toLowerCase().includes(filter.toLowerCase())\n    );\n        \n  };\n    // const handleDelete = () => dispatch(deleteContact(id));\n    const filterContacts = getVisibleContacts();\n    // console.log(filterContacts);\n    // console.log(filter);\n    \n    return (\n        <Item>\n            {filterContacts?.map(({ id, name, number }) => (\n                <ListFilter key={id}><span>{name}: </span>{number}\n                <BtnDelete type=\"button\" onClick={() => dispatch(deleteContact(id))}>Delete</BtnDelete></ListFilter>\n            ))}\n        </Item>\n    )\n}\n\n\n// ContactList.propTypes = {\n//     contacts: PropTypes.arrayOf(\n//     PropTypes.exact({\n//         id: PropTypes.string.isRequired,\n//         name: PropTypes.string.isRequired,\n//         number: PropTypes.string.isRequired,\n//     }).isRequired\n//   ).isRequired,\n//     deleteContacts: PropTypes.func.isRequired, \n// }\n","import { ToastContainer } from 'react-toastify';\nimport { selectError, selectIsLoading } from 'redux/contacts/contactsSelectors';\nimport { BounceLoader } from 'react-spinners';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contactsApi';\n\nexport default function Contacts() {\n  const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>\n        Contacts{' '}\n        {isLoading && !error && (\n          <BounceLoader\n            color=\"#4c4ad9\"\n            size={30}\n            cssOverride={{\n              display: 'block',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n            }}\n          />\n        )}\n      </h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","FormGeneral","styled","LabelForm","InputForm","BtnAddContact","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","reset","onSubmit","e","preventDefault","contact","find","toLowerCase","toast","addContact","type","pattern","title","required","id","nanoid","value","onChange","target","FilterForm","LabelFilter","InputFilter","Filter","contactIdFilter","htmlFor","filterContacts","currentTarget","BtnDelete","Item","ListFilter","ContactList","todo","includes","map","onClick","deleteContact","Contacts","useEffect","fetchContacts","BounceLoader","color","size","cssOverride","display","marginLeft","marginRight","autoClose"],"sourceRoot":""}